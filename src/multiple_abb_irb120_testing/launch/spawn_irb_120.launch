<launch>

  <arg name="robot_name" default="robot1"/>
  <arg name="position_x" default="0"/>
  <arg name="position_y" default="0"/>
  <arg name="position_z" default="0"/>

  <!-- setup tf_prefix-->
  <group ns="$(arg robot_name)">
    <param name="tf_prefix" value="$(arg robot_name)"/>
  </group>

  <!-- since the tf_prefix will change the name of the "world" frame, we need to publish the robot's world to "world" -->
  <node pkg="tf" type="static_transform_publisher" name="$(arg robot_name)_world_publisher" args="0 0 0 0 0 0 world $(arg robot_name)/world 100"/>

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <param name="/$(arg robot_name)/robot_description" command="$(find xacro)/xacro --inorder '$(find multiple_abb_irb120)/urdf/irb120_3_58.xacro' robotns:='/$(arg robot_name)'" />
  
  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="abb_irb120_$(arg robot_name)_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param /$(arg robot_name)/robot_description -robot_namespace /$(arg robot_name) -model abb_irb120_3_58_$(arg robot_name) -x $(arg position_x) -y $(arg position_y) -z $(arg position_z)" ns="$(arg robot_name)"/>
 
  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" ns="$(arg robot_name)"/>

  <!-- init and start Gazebo ros_control interface -->
  <include file="$(find multiple_abb_irb120)/launch/irb120_3_58_control.launch">
    <arg name="robot_name" value="$(arg robot_name)"/>
  </include>

</launch>
