 <launch>
  <!-- remap topics to conform to ROS-I specifications -->
  <remap from="/arm_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
  <remap from="/arm_controller/state" to="/feedback_states" />
  <remap from="/arm_controller/command" to="/joint_path_command"/>

<!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/>
  </include>


  <!-- need to parse xacro files in order to import them to the code -->
  <include file="$(find abb_irb120_gazebo)/launch/load_irb120_3_58.launch" />

<!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="abb_irb120_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model abb_irb120_3_58" />

    <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
  output="screen">
  </node>

  <!-- init and start Gazebo ros_control interface -->
  <include file="$(find abb_irb120_gazebo)/launch/irb120_3_58_control.launch"/>

<!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find abb_irb120_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false" />
  </include>

<!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world base_link" />

<!-- Run the main MoveIt executable -->
<include file="$(find abb_irb120_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="info" value="true"/>
  </include>

<!-- Run Rviz -->
  <include file="$(find abb_irb120_moveit_config)/launch/moveit_rviz.launch">
  </include>

</launch>
